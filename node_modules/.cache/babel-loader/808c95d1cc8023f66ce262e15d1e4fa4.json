{"ast":null,"code":"import { API } from \"../../config\";\nimport queryString from \"query-string\";\n/*-----------PRODUCT--------*/\n\nexport const getProducts = sortBy => {\n  return fetch(\"\".concat(API, \"/products?sortBy=\").concat(sortBy, \"&order=desc&limit=6\"), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*-----------CATEGORY--------*/\n\nexport const getCategories = () => {\n  return fetch(\"\".concat(API, \"/categories\"), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*-----------FILTERED PRODUCT--------*/\n\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\n  const data = {\n    limit,\n    skip,\n    filters\n  };\n  return fetch(\"\".concat(API, \"/products/by/search\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n/*-----------PRODUCT LIST--------*/\n\nexport const list = params => {\n  const query = queryString.stringify(params);\n  console.log(\"query\", query);\n  return fetch(\"\".concat(API, \"/products/search?\").concat(query), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const read = productId => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*-----------PRODUCT RELATED LIST--------*/\n\nexport const listRelated = productId => {\n  return fetch(\"\".concat(API, \"/products/related/\").concat(productId), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*-----------PAYMENT TOKEN--------*/\n\nexport const getBraintreeClientToken = productId => {\n  return fetch(\"\".concat(API, \"/products/related/\").concat(productId), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/nyantsa/Desktop/BookStore/bookfrontend/src/components/Core/apiCore.js"],"names":["API","queryString","getProducts","sortBy","fetch","method","then","response","json","catch","err","console","log","getCategories","getFilteredProducts","skip","limit","filters","data","headers","Accept","body","JSON","stringify","list","params","query","read","productId","listRelated","getBraintreeClientToken"],"mappings":"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","sourcesContent":["import { API } from \"../../config\";\nimport queryString from \"query-string\";\n\n/*-----------PRODUCT--------*/\nexport const getProducts = sortBy => {\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/*-----------CATEGORY--------*/\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/*-----------FILTERED PRODUCT--------*/\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\n    const data = {\n        limit,\n        skip,\n        filters\n    };\n    return fetch(`${API}/products/by/search`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n/*-----------PRODUCT LIST--------*/\nexport const list = params => {\n    const query = queryString.stringify(params);\n    console.log(\"query\", query);\n    return fetch(`${API}/products/search?${query}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\nexport const read = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/*-----------PRODUCT RELATED LIST--------*/\nexport const listRelated = productId => {\n    return fetch(`${API}/products/related/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n/*-----------PAYMENT TOKEN--------*/\nexport const getBraintreeClientToken = productId => {\n    return fetch(`${API}/products/related/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}