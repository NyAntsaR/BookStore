{"ast":null,"code":"import { API } from \"../../config\";\n/*------- CREATE CATEGORY--------*/\n\nexport const createCategory = (userId, token, category) => {\n  return fetch(\"\".concat(API, \"/category/create/\").concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n/*------- GET CATEGORY--------*/\n\nexport const getCategories = () => {\n  return fetch(\"\".concat(API, \"/categories\"), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*------- CREATE PRODUCT--------*/\n\nexport const createProduct = (userId, token, product) => {\n  return fetch(\"\".concat(API, \"/product/create/\").concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n/*------- GET ALL PRODUCT--------*/\n\nexport const getProducts = () => {\n  return fetch(\"\".concat(API, \"/products\"), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*------- GET SIGNLE PRODUCT--------*/\n\nexport const getProduct = productId => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*------- UPDATE SINGLE PRODUCT--------*/\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId, \"/\").concat(userId), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*------- DELETE SINGLE PRODUCT--------*/\n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId, \"/\").concat(userId), {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/nyantsa/Desktop/BookStore/bookfrontend/src/components/Admin/apiAdmin.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getCategories","createProduct","product","getProducts","getProduct","productId","updateProduct","deleteProduct"],"mappings":"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","sourcesContent":["import { API } from \"../../config\";\n\n/*------- CREATE CATEGORY--------*/\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n/*------- GET CATEGORY--------*/\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/*------- CREATE PRODUCT--------*/\nexport const createProduct = (userId, token, product) => {\n    return fetch(`${API}/product/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n/*------- GET ALL PRODUCT--------*/\nexport const getProducts = () => {\n    return fetch(`${API}/products`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/*------- GET SIGNLE PRODUCT--------*/\nexport const getProduct = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/*------- UPDATE SINGLE PRODUCT--------*/\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/*------- DELETE SINGLE PRODUCT--------*/\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}