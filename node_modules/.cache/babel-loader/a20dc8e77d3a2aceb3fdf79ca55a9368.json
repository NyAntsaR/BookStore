{"ast":null,"code":"import _objectSpread from \"/Users/nyantsa/Desktop/BookStore/bookfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/nyantsa/Desktop/BookStore/bookfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nyantsa/Desktop/BookStore/bookfrontend/src/components/Core/Checkout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getBraintreeClientToken } from \"./apiCore\";\nimport { isAuthenticated } from \"../Auth\";\nimport { Link } from \"react-router-dom\";\nimport 'braintree-web';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({\n  products\n}) => {\n  const _useState = useState({\n    success: false,\n    clientToken: null,\n    error: '',\n    // use for UI\n    instance: {},\n    address: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1]; // Make a request to the backend\n\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token; // Run when the component mount and every time there is a change\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        setData(_objectSpread({}, data, {\n          error: data.error\n        }));\n      } else {\n        setData(_objectSpread({}, data, {\n          clientToken: data.clientToken\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, showDropIn()) : React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Sign in to checkout\"));\n  };\n\n  const showDropIn = () => // Show the drop in when token is there\n  React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, data.clientToken !== null && products.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken\n    },\n    onInstance: instance => instance = instance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    style: {\n      backgroundColor: '#4B3655',\n      color: 'white'\n    },\n    className: \"btn\",\n    onClick: buy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fa fa-credit-card\",\n    \"aria-hidden\": \"true\",\n    style: {\n      fontSize: '20px',\n      color: 'white',\n      border: \"1px solid #4B3655 \"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), \"Pay\")) : null);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Total: \", React.createElement(\"span\", {\n    style: {\n      color: \"green\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" $\", getTotal(), \" \")), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/nyantsa/Desktop/BookStore/bookfrontend/src/components/Core/Checkout.js"],"names":["React","useState","useEffect","getBraintreeClientToken","isAuthenticated","Link","DropIn","Checkout","products","success","clientToken","error","instance","address","data","setData","userId","user","_id","token","getToken","then","getTotal","reduce","currentValue","nextValue","count","price","showCheckout","showDropIn","length","authorization","backgroundColor","color","buy","fontSize","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {getBraintreeClientToken} from \"./apiCore\"\nimport { isAuthenticated } from \"../Auth\";\nimport { Link } from \"react-router-dom\";\nimport 'braintree-web'\nimport DropIn from 'braintree-web-drop-in-react'\n\nconst Checkout = ({ products }) => {\n    const [data, setData] = useState({\n        success: false,\n        clientToken: null,\n        error: '',\n        // use for UI\n        instance: {},\n        address: ''\n    })\n\n    // Make a request to the backend\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    // Run when the component mount and every time there is a change\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                setData({ ...data, error: data.error });\n            } else {\n                setData({ ...data, clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>\n                {showDropIn()}\n            </div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    const showDropIn = () => (\n        // Show the drop in when token is there\n        <div>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <DropIn options={{\n                        authorization: data.clientToken\n                    }} onInstance={instance =>instance  = instance} />\n                    <button \n                        style={{backgroundColor: '#4B3655', color: 'white'}} \n                        className=\"btn\" \n                        onClick={buy}>\n                        <i class=\"fa fa-credit-card\" aria-hidden=\"true\" style={{fontSize: '20px', color:'white', border: \"1px solid #4B3655 \"}}></i>  \n                            Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    )\n\n    return (\n        <div>\n            <h2>Total: <span style={{color: \"green\"}}> ${getTotal()} </span></h2>\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}