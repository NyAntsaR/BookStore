{"ast":null,"code":"import _objectSpread from \"/Users/nyantsa/Desktop/BookStore/bookfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/nyantsa/Desktop/BookStore/bookfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nyantsa/Desktop/BookStore/bookfrontend/src/components/Core/Checkout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getBraintreeClientToken, processPayment } from \"./apiCore\";\nimport { isAuthenticated } from \"../Auth\";\nimport { Link } from \"react-router-dom\";\nimport 'braintree-web';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({\n  products\n}) => {\n  const _useState = useState({\n    success: false,\n    clientToken: null,\n    error: '',\n    // use for UI\n    instance: {},\n    address: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1]; // Make a request to the backend\n\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token; // Run when the component mount and every time there is a change\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        setData(_objectSpread({}, data, {\n          error: data.error\n        }));\n      } else {\n        setData(_objectSpread({}, data, {\n          clientToken: data.clientToken\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, showDropIn()) : React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Sign in to checkout\"));\n  };\n\n  const buy = () => {\n    // send the nonce ( payment method) to the server\n    // Nonce = data.instance.requestPaymentMethod()\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      console.log(data);\n      nonce = data.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce' to the backend\n      // and also total to be charged\n\n      console.log('send nonce and total to process: ', nonce, getTotal(products));\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products) // send data to the backend\n\n      };\n      processPayment(userId, token, paymentData).then(response => console.log(response)).catch(error => console.log(error));\n    }).catch(error => {\n      console.log('dropin error: ', error);\n      setData(_objectSpread({}, data, {\n        error: error.message\n      }));\n    });\n  };\n\n  const showDropIn = () => // Show the drop in when token is there\n  // onBlur => wherever I click on the page, will run and empty the error\n  React.createElement(\"div\", {\n    onBlur: () => setData(_objectSpread({}, data, {\n      error: \"\"\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, data.clientToken !== null && products.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken\n    },\n    onInstance: instance => data.instance = instance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    style: {\n      backgroundColor: '#4B3655',\n      color: 'white'\n    },\n    className: \"btn\",\n    onClick: buy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fa fa-credit-card\",\n    \"aria-hidden\": \"true\",\n    style: {\n      fontSize: '20px',\n      color: 'white',\n      border: \"1px solid #4B3655 \"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), \"Pay\")) : null);\n\n  const showError = error => React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, error);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Total: \", React.createElement(\"span\", {\n    style: {\n      color: \"green\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \" $\", getTotal(), \" \")), showError(data.error), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/nyantsa/Desktop/BookStore/bookfrontend/src/components/Core/Checkout.js"],"names":["React","useState","useEffect","getBraintreeClientToken","processPayment","isAuthenticated","Link","DropIn","Checkout","products","success","clientToken","error","instance","address","data","setData","userId","user","_id","token","getToken","then","getTotal","reduce","currentValue","nextValue","count","price","showCheckout","showDropIn","buy","nonce","getNonce","requestPaymentMethod","console","log","paymentData","paymentMethodNonce","amount","response","catch","message","length","authorization","backgroundColor","color","fontSize","border","showError","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {getBraintreeClientToken, processPayment} from \"./apiCore\"\nimport { isAuthenticated } from \"../Auth\";\nimport { Link } from \"react-router-dom\";\nimport 'braintree-web'\nimport DropIn from 'braintree-web-drop-in-react'\n\nconst Checkout = ({ products }) => {\n    const [data, setData] = useState({\n        success: false,\n        clientToken: null,\n        error: '',\n        // use for UI\n        instance: {},\n        address: ''\n    })\n\n    // Make a request to the backend\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    // Run when the component mount and every time there is a change\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                setData({ ...data, error: data.error });\n            } else {\n                setData({ ...data, clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>\n                {showDropIn()}\n            </div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    const buy = () => {\n        // send the nonce ( payment method) to the server\n        // Nonce = data.instance.requestPaymentMethod()\n\n        let nonce;\n        let getNonce = data.instance.requestPaymentMethod()\n        .then(data => {\n            console.log(data);\n            nonce = data.nonce;\n            // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce' to the backend\n            // and also total to be charged\n            console.log('send nonce and total to process: ', nonce, getTotal(products))\n            const paymentData = {\n                paymentMethodNonce : nonce, \n                amount: getTotal(products)\n            }\n\n            // send data to the backend\n            processPayment(userId, token, paymentData)\n            .then(response => console.log(response))\n            .catch(error => console.log(error))\n        })\n        .catch(error => {\n            console.log('dropin error: ', error)\n            setData({...data, error: error.message })\n        })\n\n    }\n    const showDropIn = () => (\n        // Show the drop in when token is there\n        // onBlur => wherever I click on the page, will run and empty the error\n        <div onBlur={() => setData({...data, error: \"\"})}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <DropIn options={{\n                        authorization: data.clientToken\n                    }} onInstance={instance => data.instance  = instance} />\n                    <button \n                        style={{backgroundColor: '#4B3655', color: 'white'}} \n                        className=\"btn\" \n                        onClick={buy}>\n                        <i class=\"fa fa-credit-card\" aria-hidden=\"true\" style={{fontSize: '20px', color:'white', border: \"1px solid #4B3655 \"}}></i>  \n                            Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}}>\n            {error}\n        </div>\n    )\n\n    return (\n        <div>\n            <h2>Total: <span style={{color: \"green\"}}> ${getTotal()} </span></h2>\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}